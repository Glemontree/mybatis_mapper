<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glemontree.mybatis.dao.EmployeeMapper">
    <!--
    namespace:名称空间;指定为接口的全类名
    id：唯一标识
    resultType：返回值类型
    #{id}：从传递过来的参数中取出id值
    
    public Employee getEmpById(Integer id);
     -->
    
    <!--
        public Map<Integer, Employee> getEmpByLastNameReturnMap(String lastName);
    -->
    <select id="getEmpByLastNameReturnMap" resultType="com.glemontree.mybatis.bean.Employee">
        SELECT * FROM tbl_employee WHERE last_name like #{lastName}
    </select>
    
    <!--
        public Map<String, Object> getEmpByIdReturnMap(Integer id);
    -->
    <select id="getEmpByIdReturnMap" resultType="map">
         SELECT * FROM tbl_employee WHERE id = #{id}
    </select>
    
    <!--public List<Employee> getEmpsByLastNameLike(String lastName);-->
    <!--如果返回的是一个集合，要写集合中元素的类型-->
    <select id="getEmpsByLastNameLike" resultType="com.glemontree.mybatis.bean.Employee">
        SELECT * FROM tbl_employee WHERE last_name LIKE #{lastName}
    </select>
    
    <!--
        public Employee getEmpByMap(Map<String, Object> map);
    -->
    <select id="getEmpByMap" resultType="com.glemontree.mybatis.bean.Employee">
        SELECT * FROM tbl_employee WHERE id = ${id} AND last_name = #{lastName}
    </select>
    
    <!--
        public Employee getEmpByIdAndLastName(Integer id, String lastName);
    -->
    <select id="getEmpByIdAndLastName" resultType="com.glemontree.mybatis.bean.Employee">
        SELECT * FROM tbl_employee WHERE id = #{param1} AND last_name = #{param2}
    </select>
    
    
    <select id="getEmpById" resultType="com.glemontree.mybatis.bean.Employee">
        select * from tbl_employee where id = #{id}
    </select>
    <select id="getEmpById" resultType="com.glemontree.mybatis.bean.Employee"
            databaseId="mysql">
        select * from tbl_employee where id = #{idabc}
    </select>
    <select id="getEmpById" resultType="com.glemontree.mybatis.bean.Employee"
            databaseId="oracle">
        select EMPLOYEE_ID id,LAST_NAME	lastName,EMAIL email
        from employees where EMPLOYEE_ID=#{id}
    </select>
    
    <!--
        public void addEmp(Employee employee);
    -->
    <!--parameterType：可以省略，如果要写，则指定全类名-->
    <!--mysql支持自增主键，自增主键的获取，mybatis也是利用statement.getGeneratedKeys()方法
        useGeneratedKeys="true"：使用自增主键获取主键值策略
        keyProperty：指定对应的主键属性，也就是mybatis获取到主键值之后将这个值封装给javabean的哪个属性
    -->
    <insert id="addEmp" parameterType="com.glemontree.mybatis.bean.Employee"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tbl_employee(last_name, email, gender)
        VALUES(#{lastName}, #{email}, #{gender})
    </insert>
    
    <!--
        public void updateEmp(Employee employee);
    -->
    <!---->
    <update id="updateEmp">
        UPDATE tbl_employee
        SET last_name=#{lastName}, email=#{email}, gender=#{gender}
        WHERE id=#{id}
    </update>
    
    <!--
        public void deleteEmpById(Integer id);
    -->
    <!---->
    <delete id="deleteEmpById">
        DELETE FROM tbl_employee WHERE id=#{id}
    </delete>
</mapper>