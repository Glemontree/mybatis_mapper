<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glemontree.mybatis.dao.EmployeeMapperPlus">
    
    <!--自定义某个javaBean的封装规则
        type：自定义规则的java类型
        id：唯一id，方便引用
    -->
    <resultMap id="MySimpleEmp" type="com.glemontree.mybatis.bean.Employee">
        <!--指定主键列的封装规则，column指定哪一列，property指定对应的javaBean属性-->
        <!--id定义主键底层会有优化-->
        <id column="id" property="id"/>
        <!--result指定普通列的封装规则-->
        <result column="last_name" property="lastName"/>
        <!--其他不指定的类会自动封装，推荐只要写resultMap，就把全部的映射规则全部写上-->
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
    </resultMap>
    
    <!--
         public Employee getEmpById(Integer id);
    -->
    <!--resultMap：自定义结果集映射规则；-->
    <select id="getEmpById" resultMap="MySimpleEmp">
        SELECT * FROM tbl_employee WHERE id = #{id}
    </select>
    
    <!--
        查询Employee的同时查出员工对应的部门
    -->
    <!--
        public Employee getEmpAndDept(Integer id);
    -->
    <!--联合查询：级联属性封装结果集-->
    <resultMap id="MyDifEmp" type="com.glemontree.mybatis.bean.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="gender" property="gender"/>
        <result column="did" property="dept.id"/>
        <result column="dept_name" property="dept.departmentName"/>
    </resultMap>
    <resultMap id="MyDifEmp2" type="com.glemontree.mybatis.bean.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="gender" property="gender"/>
        <!--association可以指定联合的javaBean对象
            property="dept"：指定哪个属性是联合的对象
            javaType：指定这个属性对象的类型（不能省略）
        -->
        <association property="dept" javaType="com.glemontree.mybatis.bean.Department">
            <id column="did" property="id"/>
            <result column="dept_name" property="departmentName"/>
        </association>
    </resultMap>
    <select id="getEmpAndDept" resultMap="MyDifEmp2">
        SELECT e.id id, e.last_name last_name, e.gender gender, e.d_id d_id,
        d.id did, d.dept_name dept_name FROM tbl_employee e, tbl_dept d
        WHERE e.d_id=d.id AND e.id=#{id}
    </select>
    
    
    <!--使用association进行分步查询
        1. 按照员工Id查询员工信息
        2. 根据查询员工信息中的d_id查询部门表查出部门信息
        3. 部门设置到员工里面
    -->
    <resultMap id="MyEmpByStep" type="com.glemontree.mybatis.bean.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <!--
            association定义关联对象的封装规则
            select：表明当前属性是调用select指定的方法查出的结果
            column：指定将哪一列的值传给这个方法
            
            流程：使用select指定的方法查出对象（传入column指定的这列参数的值并封装给property指定的属性）
        -->
        <association property="dept" select="com.glemontree.mybatis.dao.DepartmentMapper.getDeptById"
            column="d_id">
        </association>
    </resultMap>
    <select id="getEmpByIdStep" resultMap="MyEmpByStep">
        SELECT * FROM tbl_employee WHERE id = #{id}
    </select>
    
    <!--
        可以使用延迟加载
        部门信息在使用的时候再去查询
        分步查询的基础上加上两个配置即可
    -->
    
    <!--查询部门的时候将部门对应的所有员工信息也查询出来-->
    <select id="getEmpsByDeptId" resultType="com.glemontree.mybatis.bean.Employee">
        SELECT * FROM tbl_employee WHERE d_id = #{deptId}
    </select>
    
    <resultMap id="MyEmpDis" type="com.glemontree.mybatis.bean.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        
        <!--
            column：指定判定的列名
            javaType：列值对应的java类型
        -->
        <discriminator javaType="string" column="gender">
            <!--
                resultType：指定封装的结果类型
            -->
            <case value="0" resultType="com.glemontree.mybatis.bean.Employee">
                <association property="dept" select="com.glemontree.mybatis.dao.DepartmentMapper.getDeptById"
                             column="d_id">
                </association>
            </case>
            <case value="1" resultType="com.glemontree.mybatis.bean.Employee">
                <id column="id" property="id"/>
                <result column="last_name" property="lastName"/>
                <result column="last_name" property="email"/>
                <result column="gender" property="gender"/>
            </case>
        </discriminator>
        
    </resultMap>
</mapper>